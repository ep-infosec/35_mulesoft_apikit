<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
      xmlns:cors="http://www.mulesoft.org/schema/mule/cors"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
        http://www.mulesoft.org/schema/mule/cors http://www.mulesoft.org/schema/mule/cors/current/mule-cors.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <apikit:mapping-exception-strategy name="Global_Mapping_Exception_Strategy">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException"/>
            <set-payload value="resource not found"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException"/>
            <set-payload value="method not allowed"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException"/>
            <set-payload value="unsupported media type"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException"/>
            <set-payload value="not acceptable"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException"/>
            <set-payload value="bad request"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>

    <apikit:config name="proxiedApi" raml="proxied.yaml" consoleEnabled="false"/>

    <cors:config name="defaultConfig"/>

    <flow name="doorway">
        <http:inbound-endpoint port="${serverPort}" host="localhost" path="api"/>
        <cors:validate publicResource="true" config-ref="defaultConfig" />
        <apikit:router/>
        <exception-strategy ref="Global_Mapping_Exception_Strategy"/>
    </flow>

    <flow name="get:/leagues">
        <set-payload value="[{ &quot;name&quot;: &quot;Liga BBVA&quot; }, { &quot;name&quot;: &quot;Premiere League&quot; }]"/>
        <set-property propertyName="Content-Type" value="application/json"/>
    </flow>

    <flow name="get:/leagues/{leagueId}">
        <set-payload value="{ &quot;name&quot;: &quot;Liga BBVA&quot; }"/>
        <set-property propertyName="Content-Type" value="application/json"/>
    </flow>

    <flow name="get:/leagues/{leagueId}/teams">
        <set-payload value="[{ &quot;name&quot;: &quot;Atleti&quot; }, { &quot;name&quot;: &quot;Elche&quot; }]" />
        <set-property propertyName="preferred-team" value="#[message.inboundProperties.preferred]"/>
    </flow>

    <!--
    <flow name="post:/leagues">
        <custom-transformer class="org.mule.module.apikit.transform.PayloadNormalizerTransformer"
                            returnClass="org.mule.module.apikit.leagues.League"/>
        <choice>
            <when expression="#[!payload.name.matches('[\\w ]+')]">
                <set-property propertyName="http.status" value="400"/>
                <set-payload value="Invalid League Name"/>
            </when>
            <otherwise>
                <set-property propertyName="Location" value="http://localhost:${serverPort}/api/leagues/#[app.registry['list-of-leagues'].getLeagues().size() + 1]"/>
                <expression-component>
                    payload.id = message.inboundProperties.get('Location');
                    app.registry['list-of-leagues'].getLeagues().add(payload);
                </expression-component>
                <set-payload value="#[org.mule.transport.NullPayload.getInstance()]"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="put:/leagues/{leagueId}">
        <custom-transformer class="org.mule.module.apikit.transform.PayloadNormalizerTransformer"
                            returnClass="org.mule.module.apikit.leagues.League"/>
        <choice>
            <when expression="#[!payload.name.matches('[\\w ]+')]">
                <logger level="WARN" message="invalid name returning 400"/>
                <set-property propertyName="http.status" value="400"/>
            </when>
            <otherwise>
                <expression-component>
                    league = app.registry['list-of-leagues'].getLeague(leagueId);
                    league.name = payload.name;
                </expression-component>
                <set-payload value="#[org.mule.transport.NullPayload.getInstance()]"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="delete:/leagues/{leagueId}">
        <expression-component>
            app.registry['list-of-leagues'].deleteLeague(leagueId)
        </expression-component>
    </flow>

    <flow name="put:/leagues/{leagueId}/badge">
        <set-variable variableName="mp1" value="#[org.mule.util.IOUtils.toString(message.inboundAttachments['description'].getDataSource().getInputStream())]"/>
        <set-variable variableName="mp2" value="#[message.inboundAttachments['image'].getDataSource().getPart().getContentDispositionFilename()]"/>
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;upload&quot;: &quot;OK&quot; }"/>
    </flow>

    <flow name="get:/leagues/{leagueId}/badge">
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;name&quot;: &quot;Liga BBVA&quot; }"/>
    </flow>

    <flow name="get:/leagues/{leagueId}/teams/leader">
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;name&quot;: &quot;Aleti&quot; }"/>
    </flow>
-->
</mule>
